# first function call is for fgets() to get the login and put it in a buffer of char[32]
# the next call is for scanf to get the serial and store it
# after that, we have auth function, to verify the parameters : the login and the serial 
# if the retrun result is 0, the function system will be executed and we will
# have a shell
# pb : auth contains a complex hashing algorithm to calculate the good serial
# with the login characters. we can reverse it and make a hashing program to generate the
# serials, or read the memory when the function auth compares the serial
# generated with the input
# First let's create a file with a login and a random serial:
echo "HELLO42" > /tmp/test
echo "42" >> /tmp/test
# in gdb :
# 2 breakpoints :
br *0x80487ba (address of the ptrace after return verification)
br *0x8048866 (the address of the serial)
run < /tmp/test
set $eax = 0 (bypass the ptrace verification)
c
x/d $ebp -0x10 (dump our serial)
And we get 6229097
